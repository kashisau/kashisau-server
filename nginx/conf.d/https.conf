server_tokens off;
charset utf-8;

add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";

ssl_certificate /etc/ssl/certs/domain-bundle.crt;
ssl_certificate_key /etc/ssl/certs/server.key;
ssl_dhparam /etc/ssl/certs/dhparam.pem;
ssl_trusted_certificate /etc/ssl/certs/ca-certificate.pem;

ssl_session_cache shared:SSL:50m;
ssl_session_timeout 1d;
ssl_session_tickets off;

ssl_prefer_server_ciphers on;
ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
ssl_protocols TLSv1.2 TLSv1.3;

resolver 1.1.1.1 8.8.8.8 8.8.4.4;
ssl_stapling on;
ssl_stapling_verify on;
add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

map $http_user_agent $limit_bots {
  default 0;
  ~*(AhrefsBot|Baiduspider|PaperLiBot) 1;
}

# redirect http to https
server {
  listen 80;
  listen [::]:80;
  return 301 https://$server_name$request_uri;
}

# # Cannonical domain rewrite to remove www., etc. An SSL certificate is required to do the redirect
server {
  # Listen for both IPv4 & IPv6 requests on port 443 with http2 enabled
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name ~www\.(?<subdomain>\.*)?kashis\.com\.au$;
  return 301 https://${subdomain}kashis.com.au$request_uri;
}
